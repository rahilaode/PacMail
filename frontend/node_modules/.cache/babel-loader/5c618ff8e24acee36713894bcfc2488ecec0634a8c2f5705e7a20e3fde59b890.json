{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/inbox.jsx\",\n  _s = $RefreshSig$();\n// Inbox.jsx\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/navbar';\nimport DataTable from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [emails, setEmails] = useState([]);\n  useEffect(() => {\n    // // Menggunakan fetch untuk mendapatkan data dari API\n    // fetch('http://localhost:5000/get-emails')\n    //   .then(response => response.json())\n    //   .then(data => setEmails(data))\n    //   .catch(error => console.error('Error fetching emails:', error));\n  }, []); // [] sebagai dependensi agar useEffect dijalankan sekali pada saat render pertama\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: emails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Inbox, \"Pz1emXvf1o2teMcG4tW42BuWti4=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","DataTable","jsxDEV","_jsxDEV","Inbox","_s","emails","setEmails","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/frontend/src/components/inbox.jsx"],"sourcesContent":["// Inbox.jsx\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/navbar';\nimport DataTable from './data';\n\nconst Inbox = () => {\n  const [emails, setEmails] = useState([]);\n\n  useEffect(() => {\n    // // Menggunakan fetch untuk mendapatkan data dari API\n    // fetch('http://localhost:5000/get-emails')\n    //   .then(response => response.json())\n    //   .then(data => setEmails(data))\n    //   .catch(error => console.error('Error fetching emails:', error));\n  }, []); // [] sebagai dependensi agar useEffect dijalankan sekali pada saat render pertama\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Inbox</h2>\n      <DataTable data={emails} />\n    </div>\n  );\n};\n\nexport default Inbox;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEK,OAAA;IAAAK,QAAA,gBACEL,OAAA,CAACH,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVT,OAAA;MAAAK,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdT,OAAA,CAACF,SAAS;MAACY,IAAI,EAAEP;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACP,EAAA,CAlBID,KAAK;AAAAU,EAAA,GAALV,KAAK;AAoBX,eAAeA,KAAK;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}