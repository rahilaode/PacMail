{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/inbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/navbar';\nimport DataTable from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [emailData, setEmailData] = useState([]);\n  useEffect(() => {\n    // Fetch email data from the backend\n    const fetchEmailData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/inbox');\n        const data = await response.json();\n        setEmailData(data);\n      } catch (error) {\n        console.error('Error fetching email data:', error);\n      }\n    };\n    fetchEmailData();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Inbox, \"hetHU6VpIxpzzmZ4UTe55ye8XoM=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","DataTable","jsxDEV","_jsxDEV","Inbox","_s","emailData","setEmailData","fetchEmailData","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/frontend/src/components/inbox.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/navbar';\nimport DataTable from './data';\n\nconst Inbox = () => {\n  const [emailData, setEmailData] = useState([]);\n\n  useEffect(() => {\n    // Fetch email data from the backend\n    const fetchEmailData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/inbox');\n        const data = await response.json();\n        setEmailData(data);\n      } catch (error) {\n        console.error('Error fetching email data:', error);\n      }\n    };\n\n    fetchEmailData();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Inbox</h2>\n      {/* <DataTable data={emailData} /> */}\n    </div>\n  );\n};\n\nexport default Inbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACH,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhB,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEV,CAAC;AAACd,EAAA,CAzBID,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}